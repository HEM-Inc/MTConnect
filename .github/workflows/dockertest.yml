name: Docker Publish Dev

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - develop
      - dev

    # Publish `2.1.2.3` tags as releases.
    # tags:
    #   - "*.*.*"
  # pull_request:
  #  branches:
  #    - "main"
  # allows you to run this workflow manually from the actions tab
  # workflow_dispatch:

env:
  app: mtconnect
  # Platform control flags - set to false to disable a platform
  BUILD_AMD64: true
  BUILD_ARM64: true

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Determine platforms to build
        id: platforms
        run: |
          platforms=""
          if [ "${{ env.BUILD_AMD64 }}" = "true" ]; then
            platforms="linux/amd64"
          fi
          if [ "${{ env.BUILD_ARM64 }}" = "true" ]; then
            if [ -n "$platforms" ]; then
              platforms="$platforms,linux/arm64"
            else
              platforms="linux/arm64"
            fi
          fi

          if [ -z "$platforms" ]; then
            echo "Error: No platforms enabled for build"
            exit 1
          fi

          echo "platforms=$platforms" >> $GITHUB_OUTPUT
          echo "Building for platforms: $platforms"
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ steps.platforms.outputs.platforms }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/mtconnect:experimental
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
